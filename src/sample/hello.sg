###########################################################################
# MIT License                                                             #
# Copyright (c) 2020 AKIYAMA Isao                                         #
#                                                                         #
# Permission is hereby granted, free of charge, to any person obtaining   #
# a copy of this software and associated documentation files (the         #
# "Software"), to deal in the Software without restriction, including     #
# without limitation the rights to use, copy, modify, merge, publish,     #
# distribute, sublicense, and/or sell copies of the Software, and to      #
# permit persons to whom the Software is furnished to do so, subject to   #
# the following conditions:                                               #
#                                                                         #
# The above copyright notice and this permission notice shall be          #
# included in all copies or substantial portions of the Software.         #
#                                                                         #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,         #
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF      #
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  #
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY    #
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,    #
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE       #
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                  #
###########################################################################
import "sgswing.swing" -> sw ;;

eval _main_ -> <void> {
  sw.icx = *Cx,
  Cx "Hello" sw.create_frame = *Frame,
  Cx sw.create_button = *B_greeting,
  Cx (B_greeting sw.as_abutton) "Click me" sw.set_text,

  \ <sw.context_h> *ECx <cstr> *E <sw.event_info> *EI -> <void> {
    ECx (Frame sw.as_component) "Greeting" sw.plain_message$ "Hello, world!" sw.show_message_dialog
  } sw.create_listener = *Lis,
  Cx (B_greeting sw.as_abutton) Lis sw.add_action_listener,

  Cx Frame sw.get_content_pane >> sw.instance = *CP sw.border_layout_panel_obj$,
  Cx CP (B_greeting sw.as_component) sw.border_layout_center$ sw.add_component,
  Cx Frame sw.exit_on_frame_close$ sw.set_default_close_operation,
  Cx (Frame sw.as_component) (200 100 sw.dimension$) sw.set_size,
  Cx (Frame sw.as_window) (100 100 sw.in_screen$) sw.set_location,
  Cx Frame true$ sw.set_visible
} ;;
